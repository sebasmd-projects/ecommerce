# Generated by Django 4.1.1 on 2022-09-13 00:52

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModeloPersonas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Requerido, único. 150 caracteres o menos. Letras y dígitos', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Nombre de usuario (Username)')),
                ('tipo_identificacion', models.CharField(choices=[('CC', 'Cédula de ciudadanía'), ('TI', 'Tarjeta de identidad'), ('PP', 'Pasaporte'), ('CE', 'Cédula de extranjería')], default='CC', help_text='Requerido. Seleccione el tipo de identificación', max_length=2, verbose_name='Tipo de identificación')),
                ('identificacion', models.CharField(help_text='Requerido. 20 caracteres o menos. Letras y dígitos', max_length=20, verbose_name='Identificación')),
                ('pais', models.CharField(help_text='Requerido. 50 caracteres o menos. Letras y dígitos', max_length=50, verbose_name='País')),
                ('ciudad', models.CharField(help_text='Requerido. 50 caracteres o menos. Letras y dígitos', max_length=50, verbose_name='Ciudad, Región o Departamento')),
                ('direccion', models.CharField(help_text='Especificar la dirección de residencia', max_length=150, verbose_name='Dirección')),
                ('anotaciones_direccion', models.CharField(help_text='Especificar anotaciones de la dirección', max_length=200, verbose_name='Anotaciones de la dirección (Casa, Apto, Edificio, etc.)')),
                ('email', models.EmailField(help_text='Requerido, único. 254 caracteres o menos. Dirección de correo válida', max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('termsYcond', models.BooleanField(default=False, help_text='Requerido. Acepto los términos y condiciones', verbose_name='Acepto los términos y condiciones')),
                ('cod_verificacion', models.CharField(default='0000', help_text='Requerido. 4 caracteres o menos. Código de verificación', max_length=4, verbose_name='Código de verificación')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede acceder al administrador de Django', verbose_name='Miembro del staff')),
                ('nombres', models.CharField(help_text='Nombre(s) de la persona', max_length=50, verbose_name='Nombres')),
                ('apellidos', models.CharField(help_text='Apellido(s) de la persona', max_length=50, verbose_name='Apellidos')),
                ('nombre_completo', models.CharField(blank=True, help_text='Nombre completo de la persona', max_length=100, null=True, verbose_name='Nombre completo')),
                ('celular', models.CharField(help_text='Celular de la persona (ejm: +573002001010)', max_length=20, verbose_name='Celular')),
                ('rol', models.CharField(choices=[('S', 'Superusuario'), ('M', 'Manager'), ('U', 'Usuario')], default='U', help_text='Rol de la persona', max_length=1, verbose_name='Rol')),
                ('is_active', models.BooleanField(default=True, help_text='¿El usuario está activo?', verbose_name='¿Es un usuario activo?')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='Fecha de creación del usuario', null=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Fecha de actualización o edición del usuario', null=True, verbose_name='Fecha de actualización o edición')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de aparición dentro de la base de datos', verbose_name='Orden')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
                'db_table': 'apps_auth_personas',
                'ordering': ['order', 'apellidos'],
            },
        ),
    ]
